import numpy as np
from sklearn.datasets import fetch_20newsgroups
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.pipeline import make_pipeline
from sklearn import metrics
import nltk
from nltk.corpus import stopwords
import string
nltk.download('stopwords')
data=fetch_20newsgroups(subset='all')
def preprocess(text):
 text=''.join([char for char in text if char not in string.punctuation])
 tokens=text.split()
 tokens=[word for word in tokens if word.lower() not in
stopwords.words('english')]
 return ''.join(tokens)
data.data=[preprocess(text) for text in data.data]
X_train,X_test,y_train,y_test=train_test_split(data.data,data.target,test_
size=0.2,random_state=42)
model=make_pipeline(TfidfVectorizer(),SVC(kernel='linear'))
model.fit(X_train,y_train)
predicted=model.predict(X_test)
accuracy=metrics.accuracy_score(y_test,predicted)
print(f'Accuracy: {accuracy}')
print(metrics.classification_report(y_test,predicted,target_names=data.t
arget_names))
